{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAyBpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAMC,EAAS,CAAET,WAAUC,SACvBC,EACFI,EAAQG,GAERF,EAAOE,E,GAERR,E,IAjCPL,EAAKc,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAMC,EAAaC,SAASlB,EAAKmB,SAASd,MAAMe,OAC1CC,EAAYH,SAASlB,EAAKmB,SAASG,KAAKF,OACxCG,EAAcL,SAASlB,EAAKmB,SAASK,OAAOJ,OAEzCK,EAAI,EAAGA,GAAKF,EAAaE,IAAK,CAIrCtB,EAHiBsB,EACIR,GAAcQ,EAAI,GAAKJ,GAGzCK,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAEvE2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delayInput = parseInt(form.elements.delay.value);\n  const stepInput = parseInt(form.elements.step.value);\n  const amountInput = parseInt(form.elements.amount.value);\n\n  for (let i = 1; i <= amountInput; i++) {\n    const position = i;\n    const promiseDelay = delayInput + (i - 1) * stepInput;\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const result = { position, delay };\n      if (shouldResolve) {\n        resolve(result);\n      } else {\n        reject(result);\n      }\n    }, delay);\n  });\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","result","addEventListener","event","preventDefault","delayInput","parseInt","elements","value","stepInput","step","amountInput","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.0f200b67.js.map"}