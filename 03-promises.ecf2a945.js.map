{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAyBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACT,MAAMC,EAAS,C,SAAET,E,MAAUC,GACvBC,EACFI,EAAQG,GAERF,EAAOE,EAAO,GAEfR,EAAM,G,CAjCbL,EAAKc,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAaC,SAASlB,EAAKmB,SAASd,MAAMe,OAC1CC,EAAYH,SAASlB,EAAKmB,SAASG,KAAKF,OACxCG,EAAcL,SAASlB,EAAKmB,SAASK,OAAOJ,OAElD,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAaE,IAAK,CAIrCtB,EAHiBsB,EACIR,GAAcQ,EAAI,GAAKJ,GAGzCK,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEzEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delayInput = parseInt(form.elements.delay.value);\n  const stepInput = parseInt(form.elements.step.value);\n  const amountInput = parseInt(form.elements.amount.value);\n\n  for (let i = 1; i <= amountInput; i++) {\n    const position = i;\n    const promiseDelay = delayInput + (i - 1) * stepInput;\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const result = { position, delay };\n      if (shouldResolve) {\n        resolve(result);\n      } else {\n        reject(result);\n      }\n    }, delay);\n  });\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","result","addEventListener","event","preventDefault","delayInput","parseInt","elements","value","stepInput","step","amountInput","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.ecf2a945.js.map"}